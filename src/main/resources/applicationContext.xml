<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.wxw.*"/>
<context:property-placeholder location="classpath:dbconfig.properties"/>
<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
         <property name="driverClass" value="${jdbc.driverClass}"/>
			<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
			<property name="user" value="${jdbc.user}"/>
			<property name="password" value="${jdbc.password}"/>
			</bean>
			
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml" ></property>
		</bean> 	
		
		<bean   class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.wxw.dao"></property>
		</bean> 
		
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory">   </constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
		</bean>
			
			<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			
			<property name="dataSource" ref="pooledDataSource"></property>
			</bean>
			
		<aop:config>
		<!-- 事务切入点表达式 -->
		<aop:pointcut expression="execution(* com.wxw.service..*(..))" id="txPonint"/>
		<!-- 增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPonint"/>
		</aop:config>
		<!-- 配置事务增强，事务如何切入 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="*"/>
		<tx:method name="get*" read-only="true"/>
		</tx:attributes>
		
		</tx:advice>	
		
			<!-- 1.注入自定义realm -->
	<bean id="myRealm" class="com.wxw.shiro.UserRealm" />
	<!-- 2.将realm注入到securityManager安全管理器 -->
	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>
	<!-- 3.Shiro过滤器 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 权限认证失败，则跳转到指定页面 -->
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
			<!-- 登录请求可匿名访问  -->
				/login = anon
				/login.jsp=anon
				
				<!-- 以下所有请求必须经过身份验证才可访问 -->
				/index= authc
				/index.jsp=authc
			</value>
		</property>
	</bean>
	<!-- 4.保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 5.开启Shiro注解 -->

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
		 
</beans>
